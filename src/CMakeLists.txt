FILE ( GLOB_RECURSE INSOMNIA_SOURCE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} * )

SET ( INSOMNIA_TARGET "insomnia" )

IF ( WIN32 )
    ADD_EXECUTABLE ( ${INSOMNIA_TARGET} WIN32 ${INSOMNIA_SOURCE_FILES} )
ELSE (  )
    ADD_EXECUTABLE ( ${INSOMNIA_TARGET} ${INSOMNIA_SOURCE_FILES} )
ENDIF (  )

FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
    SET_PROPERTY ( TARGET ${INSOMNIA_TARGET}
        APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
ENDFOREACH (  )

INCLUDE_DIRECTORIES ( SYSTEM "../include" )

SET_TARGET_PROPERTIES ( ${INSOMNIA_TARGET} PROPERTIES
    COMPILE_FLAGS "${CMAKE_CXX_FLAGS}" )
SET_TARGET_PROPERTIES ( ${INSOMNIA_TARGET} PROPERTIES
    LINK_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" )

TARGET_LINK_LIBRARIES ( ${INSOMNIA_TARGET}
    ${Boost_LIBRARIES}
    ${PGSQL_LIBRARY}
    ${PISTACHE_LIBRARY}
    ${PQXX_LIBRARY}
    Threads::Threads
)

IF ( CMAKE_COMPILER_IS_GNUCXX )
    IF ( CMAKE_BUILD_TYPE MATCHES "MinSizeRel"
            OR CMAKE_BUILD_TYPE MATCHES "Release" )
        SET ( INSOMNIA_EXECUTABLE_PATH $<TARGET_FILE:${INSOMNIA_TARGET}> )

        ADD_CUSTOM_COMMAND ( TARGET ${INSOMNIA_TARGET}
            POST_BUILD
            COMMAND strip ${INSOMNIA_EXECUTABLE_PATH}
            COMMAND strip -R.comment ${INSOMNIA_EXECUTABLE_PATH}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )
ENDIF (  )

COTIRE ( ${INSOMNIA_TARGET} )

GET_TARGET_PROPERTY ( INSOMNIA_TARGET_COMPILE_FLAGS ${INSOMNIA_TARGET} COMPILE_FLAGS )
GET_TARGET_PROPERTY ( INSOMNIA_TARGET_LINK_FLAGS ${INSOMNIA_TARGET} LINK_FLAGS )

MESSAGE ( STATUS "${INSOMNIA_TARGET} compile flags: ${INSOMNIA_TARGET_COMPILE_FLAGS}" )
MESSAGE ( STATUS "${INSOMNIA_TARGET} link flags: ${INSOMNIA_TARGET_LINK_FLAGS}" )

